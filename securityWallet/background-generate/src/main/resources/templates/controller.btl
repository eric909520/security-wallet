package ${table.controllerPackageName};

import java.util.List;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.secwallet.core.controller.roller;
import CTException;
import DateUtil;
import org.secwallet.core.util.string.StringUtil;
import UniqueIdUtil;

import ${table.modelPackageName}.${table.className};
import ${table.servicePackageName}.${table.className}Service;

/**
 * ---------------------------
 * ${table.description} (${table.className}Controller)         
 * ---------------------------
 * author：  cthl-generator
 * time：  ${strutil.formatDate(date(),'yyyy-MM-dd HH:mm:ss')}
 * description：  I was generated by code generator
 * ---------------------------
 */
@Api(value = "${table.description}Serve",description = "developer action",tags = "${table.description}Operation interface")
@Slf4j
@RequestMapping("/${table.objectName}")
public class ${table.className}Controller extends BaseController{

	@Autowired
	private ${table.className}Service ${table.objectName}Service;

	/**
	 * save${table.description}
	 * @param record
	 * @return
	 */	
	 @PostMapping("/add.html")
	public Result add(@RequestBody ${table.className} record) {
	 if (${table.objectName}Service.insert(record)>0){
                    return Result.ok();
                }
     return Result.error("save${table.description}fail!");
	}

    /**
     * delete by id${table.description}
     * @param records
     * @return
     */
	@GetMapping(value="/deleteById.html")
	public Result deleteById(@RequestParam String id) {
	try{
                if (StringUtil.isEmpty(id)){
                    return Result.error("id value is empty！");
                }
                if (${table.objectName}Service.deleteByPrimaryKey(id)>0){
                    return Result.ok();
                }
            }catch (CTException e)
            {
                log.error("delete by id${table.description}fail："+e.getMessage());
            }
            return Result.error("delete${table.description}fail!");
	}
	
    /**
     * Query by primary key
     * @param ${table.primaryKey.fieldName}
     * @return
     */ 	
	@GetMapping(value="/findById.html")
	public Result findById(@RequestParam ${table.primaryKey.javaType} ${table.primaryKey.fieldName}) {
            if (StringUtil.isEmpty(${table.primaryKey.fieldName})){
                    return Result.error("${table.primaryKey.fieldName}value is null！");
                }

		return Result.ok(${table.objectName}Service.findById(${table.primaryKey.fieldName}));
	}
}
